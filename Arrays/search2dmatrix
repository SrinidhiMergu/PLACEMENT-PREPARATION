// row wise sorted

bool bs(vector<vector<int>>& matrix, int r, int c, int target){
        int lo=0, hi=c-1;
        while(lo<=hi){
            int mid = (lo+hi)/2;
            if(matrix[r][mid]==target) return 1;
            if(matrix[r][mid]<target){
               lo=mid+1;
            }
            else{
               hi = mid-1;
            }
        }
        return 0;
    }
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int r=matrix.size(), c=matrix[0].size(), flag=0;
        for(int i=0; i<r; i++){
            if(bs(matrix, i, c, target)){
                flag=1;
                break;
            }
        }
        return flag;
  }
  
  
  // row and clm wise sorted
  
  int matSearch (int r, int c, int matrix[r][c], int x)
{
    int i=0, j=c-1;
    while(i>=0 && i<r && j>=0 && j<c){
        if(matrix[i][j]==x){
            return 1;
        }
        else if(matrix[i][j] < x){
            i++;
        }
        else{
            j--;
        }
        
    }
    return 0;
    
    
}
