// (> n/2 times)
// moore voting algo
int majorityElement(vector<int>& nums) {
        int ele, c=0, n=nums.size();
        for(int i=0; i<n; i++){
            if(c==0){
                ele = nums[i];
            }
            if(ele == nums[i]){
                c++;
            }
            else{
                c--;
            }
        }
        return ele;
 }
 
 // (> n/3 times)
 // boyer moore voting algo
 
 vector<int> majorityElement(vector<int>& nums) {
        int n=nums.size(), n1=-1, n2=-1, c1=0, c2=0;
        for(int i=0; i<n; i++){
            if(n1 == nums[i]) c1++;
            else if(n2 ==  nums[i]) c2++;
            else if(c1==0){
                n1 = nums[i];
                c1=1;
            }
            else if(c2==0){
                n2 = nums[i];
                c2=1;
            }
            else{
                c1--, c2--;
            }
        }
        c1=0, c2=0;
        for(int i=0; i<n; i++){
            if(nums[i] == n1) c1++;
            else if(nums[i]==n2) c2++;
        }
        vector<int> ans;
        if(c1>(n/3)) ans.push_back(n1);
        if(c2>(n/3)) ans.push_back(n2);
        return ans;
    }
